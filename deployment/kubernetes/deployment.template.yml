apiVersion: apps/v1
kind: Deployment 
metadata: 
  name: crds-auth
  namespace: api
spec: 
  replicas: 2
  progressDeadlineSeconds: 180
  strategy: 
    type: RollingUpdate 
    rollingUpdate: 
      maxSurge: 2
      maxUnavailable: 0
  selector:
    matchLabels:
      app: crds-auth
  template: 
    metadata: 
      labels:
        app: crds-auth
    spec: 
      containers: 
        - name: crds-auth
          image: crdschurch/crds-service-auth:$DOCKER_TAG
          imagePullPolicy: Always 
          ports: 
            - containerPort: 80
          resources: 
            limits: 
              memory: "1Gi"
              cpu: "500m"
            requests: 
              memory: "16Mi" 
              cpu: "100m" 
          readinessProbe:
            httpGet:
              path: /api/health/ready
              port: 80
            initialDelaySeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /api/health/live
              port: 80
            initialDelaySeconds: 20
            timeoutSeconds: 3
            successThreshold: 1
            periodSeconds: 10
          env: 
            - name: NEW_RELIC_LICENSE_KEY            
              value: $NR_INSTALL_KEY
            - name: NEW_RELIC_APP_NAME
              value: $NR_APP_NAME
            - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
              value: $NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
            - name: CRDS_ENV
              value: $CRDS_ENV
            - name: VAULT_ROLE_ID
              value: $VAULT_ROLE_ID
            - name: VAULT_SECRET_ID
              value: $VAULT_SECRET_ID